# 删除函数 async fn setup_environment()
# 在main函数中删除调用：setup_environment().await;
# 在github中设置变量 UUID、NEZHA_SERVER、NEZHA_KEY、ARGO_DOMAIN、ARGO_AUTH、CFIP、NAME
# 如果使用哪吒v0，还需要在github中设置 NEZHA_PORT

name: Deploy to Shuttle

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 1'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Install specific version of Shuttle CLI
        run: |
          cargo install cargo-shuttle --version 0.52.0 --locked --force

      - name: Update Cargo dependencies
        run: |
          cargo update

      - name: Create Shuttle.toml
        run: |
          echo 'name = "shuttle-app"' > Shuttle.toml
      
      # --- 创建项目并设置 Secrets (若不存在则使用默认值) ---
      - name: Create Project and Set Secrets
        env:
          SHUTTLE_API_KEY: ${{ secrets.SHUTTLE_API_KEY }}
        run: |
          # 必须先创建项目，才能为其设置 secrets。 '|| true' 可以防止在项目已存在时出错。
          cargo shuttle project create --name shuttle-app || true
          
          # 优先从 GitHub Secrets 读取变量。如果 secret 未定义，则使用冒号和连字符(`:-`)后面的默认值。
          # 使用双引号是一种更安全的做法，可以防止值中包含空格时出现问题。
          cargo shuttle secrets set UUID="${{ secrets.UUID:-86ecdec6-59a2-42bc-8d29-6887c0956b1e }}"
          cargo shuttle secrets set NEZHA_SERVER="${{ secrets.NEZHA_SERVER }}"
          cargo shuttle secrets set NEZHA_PORT="${{ secrets.NEZHA_PORT }}"
          cargo shuttle secrets set NEZHA_KEY="${{ secrets.NEZHA_KEY }}"
          cargo shuttle secrets set ARGO_DOMAIN="${{ secrets.ARGO_DOMAIN }}"
          cargo shuttle secrets set ARGO_AUTH="${{ secrets.ARGO_AUTH }}"
          cargo shuttle secrets set ARGO_PORT="${{ secrets.ARGO_PORT:-8080 }}"
          cargo shuttle secrets set CFIP="${{ secrets.CFIP:-time.is }}"
          cargo shuttle secrets set CFPORT="${{ secrets.CFPORT:-443 }}"
          cargo shuttle secrets set NAME="${{ secrets.NAME:-Shuttle }}"
          cargo shuttle secrets set FILE_PATH="${{ secrets.FILE_PATH:-./tmp }}"
          cargo shuttle secrets set SUB_PATH="${{ secrets.SUB_PATH:-sub }}"

      - name: Deploy to Shuttle
        env:
          SHUTTLE_API_KEY: ${{ secrets.SHUTTLE_API_KEY }}
        run: |
          # 项目已创建且 secrets 已设置，现在直接部署即可。
          cargo shuttle deploy --name shuttle-app
